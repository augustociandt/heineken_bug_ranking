<?php

/**
 * Implement hook menu
 */
function heineken_bug_ranking_menu() {
  $items = array(); 
  $items['admin/config/heineken_bug_ranking'] = array(
    'title'            => 'Heineken Bug Ranking',
    'description'      => 'Setting for Heineken Bug Ranking',
    'page callback'    => 'system_admin_menu_block_page',
    'page arguments'   => array( 'heineken_bug_ranking_admin_form' ),
    'access arguments' => array( 'administer heineken_bug_ranking' ),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'system.admin.inc',
    'file path'        => drupal_get_path( 'module', 'system' )
  );
  
  $items['admin/config/heineken_bug_ranking/users'] = array(
    'title'            => 'Users administration',
    'description'      => 'Add, remove, update users',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array( 'heineken_bug_ranking_admin_form' ),
    'access arguments' => array( 'administer heineken_bug_ranking' ),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/user.admin.inc'
  );

  $items['admin/config/heineken_bug_ranking/project'] = array(
    'title'            => 'Projects administration',
    'description'      => 'Add, remove, update Projects',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array( 'heineken_bug_ranking_admin_form' ),
    'access arguments' => array( 'administer heineken_bug_ranking' ),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/project.admin.inc'
  );

  $items['admin/config/heineken_bug_ranking/type'] = array(
    'title'            => 'Type administration',
    'description'      => 'Add, remove, update type bugs',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array( 'heineken_bug_ranking_admin_form' ),
    'access arguments' => array( 'administer heineken_bug_ranking' ),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/type.admin.inc'
  );

  $items['admin/config/heineken_bug_ranking/bug'] = array(
    'title'            => 'Bugs administration',
    'description'      => 'Add, remove, update bugs',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array( 'heineken_bug_ranking_admin_form' ),
    'access arguments' => array( 'administer heineken_bug_ranking' ),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'inc/bug.admin.inc'
  );
  
  return $items;
}


function heineken_bug_ranking_theme(){
    return array(
      'heineken_bug_ranking_block_chart_theme' => array(
        'template' => 'heineken_bug_ranking-block-chart',
        'path' => drupal_get_path('module', 'heineken_bug_ranking') . '/tpl/',
        'arguments' => array(),
      ),
    );
}

/**
 * Implements hook_block_info()
 */
function heineken_bug_ranking_block_info() {
  $blocks = array();

  $blocks['chart_block'] = array(
    'info' => t('Chart Block'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  return $blocks;
}

function heineken_bug_ranking_block_view($delta = '') {
  switch ($delta) {
    case 'chart_block':
      drupal_add_js(drupal_get_path('module', 'heineken_bug_ranking') . '/script/highcharts/highcharts.js');
      drupal_add_js(drupal_get_path('module', 'heineken_bug_ranking') . '/script/highcharts/modules/exporting.js');
      return array(
        'subject' => '',
        'content' => _heineken_bug_ranking_render_block($delta),
      );
    break;
    
    default:
      # code...
      break;
  }
}

function _heineken_bug_ranking_render_block($delta = ''){
  switch ($delta) {
    case 'chart_block':
      $output = theme("heineken_bug_ranking_block_chart_theme", heineken_bug_ranking_parse_bugs(1) );
    break;
    }
  return $output;
}

function heineken_bug_ranking_parse_bugs($id) {
  $bugs = array('bugs' => heineken_bug_ranking_get_bugs($id) );

  return $bugs;
}



function heineken_bug_ranking_get_bugs($project_id) {
  $query = db_select('heineken_bug_ranking_bug', 'hb');
  $query->fields('hb');
  $query->join('heineken_bug_ranking_user', 'hu', 'hb.user_id = hu.id');
  $query->groupBy('user_id');
  $query->condition('project_id', $project_id,'=');
  $result = $query->execute();
  
  $value = array();
  while($record = $result->fetchAssoc()) {
    $value[] = $record;
  }
  return $value;
}




